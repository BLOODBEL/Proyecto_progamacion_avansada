//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIProyecto
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoPAEntities : DbContext
    {
        public ProyectoPAEntities()
            : base("name=ProyectoPAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clase> Clase { get; set; }
        public virtual DbSet<ClaseEntrenador> ClaseEntrenador { get; set; }
        public virtual DbSet<Detalle> Detalle { get; set; }
        public virtual DbSet<Direccion> Direccion { get; set; }
        public virtual DbSet<Estadisticas> Estadisticas { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<InscritoEn> InscritoEn { get; set; }
        public virtual DbSet<Maestro> Maestro { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Salario> Salario { get; set; }
        public virtual DbSet<Suscripcion> Suscripcion { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int ActualizarClase(string nombre, string descripcion, Nullable<long> idClase)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idClaseParameter = idClase.HasValue ?
                new ObjectParameter("IdClase", idClase) :
                new ObjectParameter("IdClase", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarClase", nombreParameter, descripcionParameter, idClaseParameter);
        }
    
        public virtual int ActualizarCuenta(string identificacion, string nombre, string correoElectronico, string telefono, Nullable<long> idUsuario)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCuenta", identificacionParameter, nombreParameter, correoElectronicoParameter, telefonoParameter, idUsuarioParameter);
        }
    
        public virtual int ActualizarDireccion(string calle, string codPostal, string otraSena, Nullable<long> idDireccion)
        {
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var codPostalParameter = codPostal != null ?
                new ObjectParameter("CodPostal", codPostal) :
                new ObjectParameter("CodPostal", typeof(string));
    
            var otraSenaParameter = otraSena != null ?
                new ObjectParameter("OtraSena", otraSena) :
                new ObjectParameter("OtraSena", typeof(string));
    
            var idDireccionParameter = idDireccion.HasValue ?
                new ObjectParameter("IdDireccion", idDireccion) :
                new ObjectParameter("IdDireccion", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarDireccion", calleParameter, codPostalParameter, otraSenaParameter, idDireccionParameter);
        }
    
        public virtual int ActualizarEstadistica(Nullable<decimal> altura, Nullable<decimal> peso, Nullable<System.DateTime> fecha, Nullable<long> idEstadisticas)
        {
            var alturaParameter = altura.HasValue ?
                new ObjectParameter("Altura", altura) :
                new ObjectParameter("Altura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idEstadisticasParameter = idEstadisticas.HasValue ?
                new ObjectParameter("IdEstadisticas", idEstadisticas) :
                new ObjectParameter("IdEstadisticas", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadistica", alturaParameter, pesoParameter, fechaParameter, idEstadisticasParameter);
        }
    
        public virtual int ActualizarEstadoUsuario(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoUsuario", idUsuarioParameter);
        }
    
        public virtual int ActualizarRol(string descripcion, Nullable<long> idRol)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarRol", descripcionParameter, idRolParameter);
        }
    
        public virtual int ActualizarSalario(Nullable<long> idSalario, Nullable<decimal> salario, string descripcion)
        {
            var idSalarioParameter = idSalario.HasValue ?
                new ObjectParameter("idSalario", idSalario) :
                new ObjectParameter("idSalario", typeof(long));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarSalario", idSalarioParameter, salarioParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<IniciarSesion_Result> IniciarSesion(string correoElectronico, string contrasenna)
        {
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesion_Result>("IniciarSesion", correoElectronicoParameter, contrasennaParameter);
        }
    
        public virtual int RegistrarClase(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarClase", nombreParameter, descripcionParameter);
        }
    
        public virtual int RegistrarCuenta(string identificacion, string nombre, string correoElectronico, string contrasenna, string telefono)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarCuenta", identificacionParameter, nombreParameter, correoElectronicoParameter, contrasennaParameter, telefonoParameter);
        }
    
        public virtual int RegistrarDireccion(string calle, string codPostal, string otraSena, Nullable<long> idUsuario)
        {
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var codPostalParameter = codPostal != null ?
                new ObjectParameter("CodPostal", codPostal) :
                new ObjectParameter("CodPostal", typeof(string));
    
            var otraSenaParameter = otraSena != null ?
                new ObjectParameter("OtraSena", otraSena) :
                new ObjectParameter("OtraSena", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarDireccion", calleParameter, codPostalParameter, otraSenaParameter, idUsuarioParameter);
        }
    
        public virtual int RegistrarEstadistica(Nullable<decimal> altura, Nullable<decimal> peso, Nullable<System.DateTime> fecha, Nullable<long> idUsuario)
        {
            var alturaParameter = altura.HasValue ?
                new ObjectParameter("Altura", altura) :
                new ObjectParameter("Altura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarEstadistica", alturaParameter, pesoParameter, fechaParameter, idUsuarioParameter);
        }
    
        public virtual int RegistrarRol(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarRol", descripcionParameter);
        }
    
        public virtual int RegistrarSalario(string descripcion, Nullable<decimal> salario, Nullable<long> idUsuario)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarSalario", descripcionParameter, salarioParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<RecuperarCuenta_Result> RecuperarCuenta(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecuperarCuenta_Result>("RecuperarCuenta", identificacionParameter);
        }
    
        public virtual int ActualizarSuscripcion(Nullable<long> idSuscripcion, string descripcion, Nullable<int> cantidad, Nullable<decimal> precio)
        {
            var idSuscripcionParameter = idSuscripcion.HasValue ?
                new ObjectParameter("IdSuscripcion", idSuscripcion) :
                new ObjectParameter("IdSuscripcion", typeof(long));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarSuscripcion", idSuscripcionParameter, descripcionParameter, cantidadParameter, precioParameter);
        }
    
        public virtual int RegistrarSuscripcion(string descripcion, Nullable<int> cantidad, Nullable<decimal> precio, Nullable<long> idSuscripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idSuscripcionParameter = idSuscripcion.HasValue ?
                new ObjectParameter("IdSuscripcion", idSuscripcion) :
                new ObjectParameter("IdSuscripcion", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarSuscripcion", descripcionParameter, cantidadParameter, precioParameter, idSuscripcionParameter);
        }
    }
}
