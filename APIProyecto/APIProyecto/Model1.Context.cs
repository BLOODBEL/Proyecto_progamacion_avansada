//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIProyecto
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoPAEntities2 : DbContext
    {
        public ProyectoPAEntities2()
            : base("name=ProyectoPAEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clase> Clase { get; set; }
        public virtual DbSet<ClaseEntrenador> ClaseEntrenador { get; set; }
        public virtual DbSet<Direccion> Direccion { get; set; }
        public virtual DbSet<Estadisticas> Estadisticas { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<InscritoEn> InscritoEn { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Suscripcion> Suscripcion { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int InsertUsuario(Nullable<int> idUsuario, string nombre, string apellidos1, string apellidos2, string correoElectronico, string contraseña, string teléfono, Nullable<int> idRol, string identificación, string estado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidos1Parameter = apellidos1 != null ?
                new ObjectParameter("Apellidos1", apellidos1) :
                new ObjectParameter("Apellidos1", typeof(string));
    
            var apellidos2Parameter = apellidos2 != null ?
                new ObjectParameter("Apellidos2", apellidos2) :
                new ObjectParameter("Apellidos2", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var teléfonoParameter = teléfono != null ?
                new ObjectParameter("Teléfono", teléfono) :
                new ObjectParameter("Teléfono", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var identificaciónParameter = identificación != null ?
                new ObjectParameter("Identificación", identificación) :
                new ObjectParameter("Identificación", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUsuario", idUsuarioParameter, nombreParameter, apellidos1Parameter, apellidos2Parameter, correoElectronicoParameter, contraseñaParameter, teléfonoParameter, idRolParameter, identificaciónParameter, estadoParameter);
        }
    }
}
